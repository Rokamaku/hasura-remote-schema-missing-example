version: "3.6"

services:
  postgres:
    image: postgres:12
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - hasura-apple-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      POSTGRES_PASSWORD: postgrespassword
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    volumes:
      - ./pgadmin4/servers.json:/pgadmin4/servers.json
      - ./pgadmin4/pgpass:/pgpass
    depends_on:
      - postgres
    ports:
      - 5050:80
    networks:
      - hasura-apple-network
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
  apollo-graphql-server:
    build:
      context: ./
      dockerfile: Dockerfile.apolloServer
    image: apollo-graphql-server
    networks:
      - hasura-apple-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - 4000:4000
  graphql-engine:
    build:
      context: ./
      dockerfile: Dockerfile.hasura
    image: hasura/graphql-engine
    networks:
      - hasura-apple-network
    ports:
      - "8080:8080"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - postgres
      - apollo-graphql-server
    restart: always
    environment:
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      HASURA_GRAPHQL_ADMIN_SECRET: 1
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: "anonymous"
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLE_REMOTE_SCHEMA_PERMISSIONS: "true"
      HASURA_GRAPHQL_MIGRATIONS_DIR: /app/hasura/migrations
      HASURA_GRAPHQL_METADATA_DIR: /app/hasura/metadata
      REMOTE_ENDPOINT: http://apollo-graphql-server:4000/v1/graphql
networks:
  hasura-apple-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "172.18.0.0/16"
volumes:
  db_data:
